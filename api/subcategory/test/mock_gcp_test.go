// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/birdglove2/nitad-backend/gcp (interfaces: ClientUploader)

// Package subcategory_test is a generated GoMock package.
package subcategory_test

import (
	context "context"
	multipart "mime/multipart"
	reflect "reflect"

	errors "github.com/birdglove2/nitad-backend/errors"
	gomock "github.com/golang/mock/gomock"
)

// MockClientUploader is a mock of ClientUploader interface.
type MockClientUploader struct {
	ctrl     *gomock.Controller
	recorder *MockClientUploaderMockRecorder
}

// MockClientUploaderMockRecorder is the mock recorder for MockClientUploader.
type MockClientUploaderMockRecorder struct {
	mock *MockClientUploader
}

// NewMockClientUploader creates a new mock instance.
func NewMockClientUploader(ctrl *gomock.Controller) *MockClientUploader {
	mock := &MockClientUploader{ctrl: ctrl}
	mock.recorder = &MockClientUploaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientUploader) EXPECT() *MockClientUploaderMockRecorder {
	return m.recorder
}

// DeleteFile mocks base method.
func (m *MockClientUploader) DeleteFile(arg0 context.Context, arg1 string) errors.CustomError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", arg0, arg1)
	ret0, _ := ret[0].(errors.CustomError)
	return ret0
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockClientUploaderMockRecorder) DeleteFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockClientUploader)(nil).DeleteFile), arg0, arg1)
}

// DeleteImages mocks base method.
func (m *MockClientUploader) DeleteImages(arg0 context.Context, arg1 []string, arg2 string) errors.CustomError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteImages", arg0, arg1, arg2)
	ret0, _ := ret[0].(errors.CustomError)
	return ret0
}

// DeleteImages indicates an expected call of DeleteImages.
func (mr *MockClientUploaderMockRecorder) DeleteImages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteImages", reflect.TypeOf((*MockClientUploader)(nil).DeleteImages), arg0, arg1, arg2)
}

// UploadFile mocks base method.
func (m *MockClientUploader) UploadFile(arg0 context.Context, arg1 multipart.File, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockClientUploaderMockRecorder) UploadFile(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockClientUploader)(nil).UploadFile), arg0, arg1, arg2)
}

// UploadImages mocks base method.
func (m *MockClientUploader) UploadImages(arg0 context.Context, arg1 []*multipart.FileHeader, arg2 string) ([]string, errors.CustomError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadImages", arg0, arg1, arg2)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(errors.CustomError)
	return ret0, ret1
}

// UploadImages indicates an expected call of UploadImages.
func (mr *MockClientUploaderMockRecorder) UploadImages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadImages", reflect.TypeOf((*MockClientUploader)(nil).UploadImages), arg0, arg1, arg2)
}
